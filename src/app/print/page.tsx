"use client";

import { NextPage } from 'next';
import Head from 'next/head';
import Flow from '../../components/Flow';
import React,{ useState, useEffect } from "react";
import { useCategory } from '../path/to/CategoryContext';
import { API_BASE_URL } from '@/config';
const Home: NextPage = () => {
  const [collections, setCollections] = useState<string[]>([]);
  const { selectedCategory, setSelectedCategory } = useCategory();
  const [isOpen, setIsOpen] = useState(true);
  const [savedCategory, setSavedCategory] = useState<string>("");

  useEffect(() => {
    if (typeof window !== "undefined") {
      const category =
        localStorage.getItem("Current Collection:") || selectedCategory || "default";
      setSavedCategory(category);
    }
  }, [selectedCategory]);
  // Fetch collections for dropdown
  const fetchCollections = async () => {
    try {
      const response = await fetch(`${API_BASE_URL}/api/category/collections`);
      if (!response.ok) {
        throw new Error("Failed to fetch collections");
      }
      const data = await response.json();
      setCollections(data);
      setIsOpen(true);
    
    } catch (error) {
      console.error("Error fetching collections:", error);
      alert("Error fetching collections");
    }
  };

  const handleCategoryClick = (collection:string) => {
    setSelectedCategory(collection);
    setIsOpen(false); // Hide the dropdown when a category is clicked
    localStorage.setItem("Current Collection:", collection);
  };


  return (
    <div className="flex flex-col h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Header with Tailwind styles */}
      <header className="flex mt-[100px] z-20">
      <div className='flex-none w-1/3'></div>
  
      
      <div className="flex-1 w-1/3 text-2xl text-center font-bold">{savedCategory && <p>Selected Project: {savedCategory}</p>}</div>
      {/* Dropdown for selecting project */}
      <div className='flex-1  text-end item-center'>
      <details className="dropdown mr-14 h-10 w-40">
        <summary className="btn h-10 w-40" onClick={fetchCollections}>Select Project</summary>
        {isOpen && (
        <ul className="block menu dropdown-content text-end bg-base-100 rounded-box h-10  w-40 shadow">
          {collections.map((collection) => (
            <li key={collection}>
              <a
                onClick={() => handleCategoryClick(collection)}
                className="text-left w-full bg-white hover:bg-white-500"
              >
                {collection}
              </a>
            </li>
          ))}
        </ul>
        )}
      </details>
      </div>
     
    
      </header>
      
      
     
      {/* Flow Component */}
      <Flow selectedCategory={savedCategory} />
    
    </div>
  );
};

export default Home;
